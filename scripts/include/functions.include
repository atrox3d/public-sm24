#!/bin/bash
################################################################################
INCLUDEPATH="$(dirname $(realpath $BASH_SOURCE))"
_LOGGER="${INCLUDEPATH}/logger.include"
. "$_LOGGER" || { echo "FATAL| impossibile caricare $_LOGGER"; exit 1; }
info "$_LOGGER" loaded
exit
################################################################################
#                                                                              #
#	detect OS                                                                  #
#                                                                              #
################################################################################
function getOS()
{
	MACHINE="UNKNOWN"
	OS="UNKNOWN"
	RETURN=0

	UNAME="$(uname -s)"
	case "${UNAME}" in
		Linux*)     MACHINE=Linux;OS=LINUX;;
		Darwin*)    MACHINE=MacOS=MACOS;;
		CYGWIN*)    MACHINE=Cygwin;OS=WINDOWS;;
		MINGW*)     MACHINE=MinGw;OS=WINDOWS;;
		*)          MACHINE="UNKNOWN:${unameOut}";OS="$MACHINE";RETURN=1;;
	esac
	echo ${OS}
	return ${RETURN}
}
################################################################################
#                                                                              #
#	check if windows                                                           #
#                                                                              #
################################################################################
function iswindows()
{
	if OS="$(getOS)"
	then
		[ "$OS" == "WINDOWS" ] && return 0 || return 1
	else
		return 1
	fi
}
################################################################################
#                                                                              #
#	check if linux                                                             #
#                                                                              #
################################################################################
function islinux()
{
	if OS="$(getOS)"
	then
		[ "$OS" == "LINUX" ] && return 0 || return 1
	else
		return 1
	fi
}
################################################################################
#                                                                              #
################################################################################
function timestamp()
{
	echo "$(date +%Y/%m/%d-%H:%M:%S)"
}
################################################################################
#                                                                              #
################################################################################
function timeserial()
{
	echo "$(date +%Y%m%d.%H%M%S)"
}
################################################################################
#                                                                              #
################################################################################
function getJSONparser()
{
	if which jq > /dev/null
	then
		echo "jq"
	elif which python3  > /dev/null
	then
		echo "python3"
	elif which python  > /dev/null
	then
		echo "python"
	else
		echo "null"
		return 1
	fi
	return 0
}
################################################################################
#	checkparameters                                                            #
#		num_params                                                             #
#		min_params                                                             #
#		syntax                                                                 #
################################################################################
function checkparameters()
{
	[ $# -ge 3 ] || { 
		echo "FATAL| syntax checkparameters num_params min_params syntax"
		exit 1
	}
	
	num_params=$1
	min_params=$2
	syntax="$3"
	
	[ $num_params -ge $min_params ] || {
		echo "ERROR| syntax $syntax"
		return 1
	}
	return 0
}
################################################################################
#	setDEBUG                                                                   #
################################################################################
unset _ISDEBUG_
function setDEBUG()
{
	case ${1^^} in
		ON)
			export _ISDEBUG_=ON;;
		OFF)
			export _ISDEBUG_=OFF;;
	esac
}
################################################################################
#	isDEBUG                                                                   #
################################################################################
function isDEBUG()
{
	[ "$_ISDEBUG_" == "ON" ]
}
################################################################################
#                                                                              #
#	if main                                                                    #
#                                                                              #
################################################################################

if [ "$(basename $BASH_SOURCE)" == "$(basename $0)" ]
then
	iswindows && echo "windows"
	islinux && echo "linux"
	
	isDEBUG && echo "debug" || echo "no debug"
	setDEBUG ON
	isDEBUG && echo "debug" || echo "no debug"
fi

